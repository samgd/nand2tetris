// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16], load, inc, reset;
    OUT out[16];

    PARTS:
    Not(in=load,  out=notLoad);
    Not(in=inc,   out=notInc);
    Not(in=reset, out=notReset);

    // Mux4Way16 sel[2]:

    //     sel[1] is true if reset=0 and load=0
    And(a=notReset, b=notLoad, out=sel1);

    //     sel[0] is true if
    //         (reset=0 and load=1)
    //      or (reset=0 and load=0 and inc=0)
    And(a=notReset,           b=load,    out=andNotResetLoad);
    And(a=notReset,           b=notLoad, out=andNotResetNotLoad);
    And(a=andNotResetNotLoad, b=notInc,  out=andNotResetNotLoadNotInc);
    Or(a=andNotResetLoad, b=andNotResetNotLoadNotInc, out=sel0);

    Inc16(in=loop, out=outInc);

    Mux4Way16(
        a=false, b=in, c=outInc, d=loop,
        sel[1]=sel1, sel[0]=sel0,
        out=newOut
    );

    Register(in=newOut, load=true, out=loop, out=out);
}
